spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql:///practice_yvan?createDatabaseIfNotExist=true&useSSL=false
#spring.datasource.username=yvan
#spring.datasource.password=yvan
spring.datasource.username=root
spring.datasource.password=root
server.port=8080

server.basePackages= com.yvan.practice

#spring.jpa.database: mysql
spring.jpa.show-sql= true
spring.jpa.hibernate.ddl-auto= update
spring.jpa.properties.hibernate.format_sql= true

jackson.indent.output= false

spring.redis.database= 0
spring.redis.host=127.0.0.1
spring.redis.port=6379
# 60*60*24*14
currentUser.Expire= 3

#REDIS (RedisProperties)
#spring.redis.database=0  # Database index used by the connection factory.
#spring.redis.host=127.0.0.1 # Redis server host.
#spring.redis.password= # Login password of the redis server.
#spring.redis.pool.max-active=8 # Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
#spring.redis.pool.max-idle=8 # Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
#spring.redis.pool.max-wait=-1 # Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
#spring.redis.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
#spring.redis.port=6379 # Redis server port.
#spring.redis.timeout=0 # Connection timeout in milliseconds.
#spring.mvc.static-path-pattern=/resources/**
